try:
    import _pickle as cPickle
except Exception as e:
    import cPickle

import logging
import json

log = logging.getLogger(__name__)

def save_model(clf,modelpath): 
    with open(modelpath, 'wb') as f: 
        cPickle.dump(clf, f) 
 
def load_model(modelpath): 
    try: 
        with open(modelpath, 'rb') as f: 
            rf = cPickle.load(f) 
            return rf 
    except Exception as e: 
        log.exception('load model error {}'.format(modelpath))
        return None 
    
def write_to_file(path,txt,mode='ab+'):
    with open(path,mode=mode) as f:
        f.write(txt)

def get_replace_type_name(name,replacedic):
    name=name.lower()
    return replacedic.get(name,'')

def read_replace(path):    
    with open(path) as f:
        data = json.load(f)
        return data
  