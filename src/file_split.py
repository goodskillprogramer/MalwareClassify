import os

from conf import STORAGE
from utility import write_to_file

trainpath=os.path.join(STORAGE,'3rd_security_train/train.csv')
testpath=os.path.join(STORAGE,'3rd_security_test/test.csv')

def train_file_split():
    'split the train file to many files by file id.Rows with the same file id should be save in one file'
    count=0
    with open(trainpath,'r') as f:
        for line in f:
            count+=1
            if count==1:
                continue
            
            splits=line.split(',')
            if len(splits)>=2:
                lable = splits[1]
                fileid=splits[0]
                subfolder = lable

                savefolder=os.path.join(STORAGE,'train_flat',subfolder)
                os.makedirs(savefolder,exist_ok=True)
                savefile=os.path.join(savefolder,str(fileid)+'.txt')
                write_to_file(savefile,line)
                if count%10000==0:
                    print(count)
                    
def test_file_split(mode,left):
    'split the test file to many files by file id.Rows with the same file id should be save in one file'
    count=0

    with open(testpath,'r') as f:
        for line in f:
            count+=1
            if count==1:
                continue
            
            splits=line.split(',')
            if len(splits)>=2:                
                fileid=splits[0]
                moderesut =int(fileid)%mode
                if  moderesut == left:
                    savefolder=os.path.join(STORAGE,'test_flat')
                    savefolder=os.path.join(savefolder,str(left))
                    os.makedirs(savefolder,exist_ok=True)    
                    savefile=os.path.join(savefolder,str(fileid)+'.txt')                    
                    write_to_file(savefile,line,mode='a+')
                    if count%10000==0:
                        print(count,fileid,mode,left)
 
def main():
    
    train_file_split()
    # u can use muti-process below for a more faster way
    test_file_split(4,0)
    test_file_split(4,1)
    test_file_split(4,2)
    test_file_split(4,3)
    
if __name__ =='__main__':
    
    main()
